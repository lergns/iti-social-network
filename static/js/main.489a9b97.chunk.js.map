{"version":3,"sources":["redux/app/appReducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","redux/app/appSelectors.ts","hoc/withSuspense.tsx","AppContainer.tsx","index.tsx","redux/auth/authReducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","redux/auth/authSelectors.ts","components/Header/Header.module.css","redux/profile/profileReducer.ts","api/API.ts","redux/dialogues/dialoguesReducer.ts","redux/users/usersReducer.ts","components/common/Preloader/Preloader.module.css","components/Navbar/Navbar.module.css"],"names":["appInitialState","isInitialized","rootReducer","combineReducers","profilePage","profileReducer","dialoguesPage","dialoguesReducer","usersPage","usersReducer","auth","authReducer","app","appState","action","type","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","Header","React","memo","isAuth","login","logout","className","classes","header","src","alt","loginBlock","onClick","to","HeaderClassContainer","render","props","PureComponent","HeaderContainer","connect","state","selectIsAuth","selectLogin","Navbar","nav","item","activeClassName","active","selectIsInitialized","withSuspense","Component","fallback","Preloader","UsersContainer","lazy","ProfileContainer","DialoguesContainer","LoginContainer","AppClassContainer","exact","path","this","initializeApp","AppContainer","dispatch","a","getAuthUserData","console","log","alert","withRouter","ReactDOM","document","getElementById","authInitialState","id","email","authState","payload","setAuthUserData","authAPI","me","res","resultCode","ResultCode","Success","data","password","rememberMe","errMessage","messages","length","stopSubmit","_error","preloader","selectAuthUserID","module","exports","profileInitialState","posts","postText","likesCount","userProfile","status","profileState","updatedState","newPost","newPostText","filter","post","postID","addPost","deletePost","setUserStatus","getUserProfile","userID","profileAPI","getProfile","getUserStatus","getStatus","updateUserStatus","updateStatus","axiosInstance","axios","create","headers","baseURL","withCredentials","usersAPI","getUsers","currentPageNumber","pageSize","get","then","follow","unfollow","delete","put","dialoguesInitialState","dialogues","personName","messageText","dialoguesState","push","newMessageText","sendMessage","usersInitialState","users","totalUsersCount","currentPage","isFetching","followingInProgress","usersState","map","user","followed","newIsFetching","followSuccess","unfollowSuccess","setCurrentPage","setIsFetching","setFollowingProgress","fetchUsers","error","items","totalCount"],"mappings":"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","file":"static/js/main.489a9b97.chunk.js","sourcesContent":["import { RootThunkType } from \"../redux-store\";\nimport { getAuthUserData } from \"../auth/authReducer\";\n\ntype AppInitialStateType = typeof appInitialState;\nexport type AppReducerActionTypes = ReturnType<typeof setInitialized>;\n// TYPES\n\nconst appInitialState = { isInitialized: false };\n\nexport const appReducer = (\n  appState = appInitialState,\n  action: AppReducerActionTypes\n): AppInitialStateType => {\n  switch (action.type) {\n    case \"app/SET_INITIALIZED\":\n      return { ...appState, isInitialized: true };\n\n    default:\n      return appState;\n  }\n};\n// REDUCER\n\nexport const setInitialized = () => ({ type: \"app/SET_INITIALIZED\" } as const);\n// ACs\n\nexport const initializeApp = (): RootThunkType => async (dispatch) => {\n  try {\n    // dispatch(getAuthUserData()) - returns promise\n    await dispatch(getAuthUserData());\n    dispatch(setInitialized());\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\n// TCs\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport {\n  profileReducer,\n  ProfileReducerActionTypes,\n} from \"./profile/profileReducer\";\nimport {\n  dialoguesReducer,\n  DialoguesReducerActionTypes,\n} from \"./dialogues/dialoguesReducer\";\nimport { usersReducer, UsersReducerActionTypes } from \"./users/usersReducer\";\nimport { authReducer, AuthReducerActionTypes } from \"./auth/authReducer\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { FormAction, reducer as formReducer } from \"redux-form\";\nimport { appReducer, AppReducerActionTypes } from \"./app/appReducer\";\n\nexport type RootStateType = ReturnType<typeof rootReducer>;\nexport type RootActionTypes =\n  | UsersReducerActionTypes\n  | AuthReducerActionTypes\n  | ProfileReducerActionTypes\n  | DialoguesReducerActionTypes\n  | AppReducerActionTypes\n  | FormAction; // type of action objects of all reducers\n// ReturnType = void || Promise<void>\nexport type RootThunkType<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootStateType,\n  unknown,\n  RootActionTypes\n>; // type of thunk creator function to be able to dispatch another thunk\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialoguesPage: dialoguesReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n});\n\n// configuring Redux DevTools for this app\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// @ts-ignore\nwindow.__store__ = store;\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport classes from \"./Header.module.css\";\n\ntype HeaderPropsType = {\n  isAuth: boolean;\n  login: string | null;\n  logout: () => void;\n};\n\nexport const Header = React.memo(\n  ({ isAuth, login, logout }: HeaderPropsType) => {\n    return (\n      <header className={classes.header}>\n        <img\n          src={\"https://cdn.logo.com/hotlink-ok/logo-social-sq.png\"}\n          alt={\"Logo\"}\n        />\n        <div className={classes.loginBlock}>\n          {isAuth ? (\n            <div>\n              {login} - <button onClick={logout}>Log out</button>\n            </div>\n          ) : (\n            <NavLink to={\"/login\"}>Log in</NavLink>\n          )}\n        </div>\n      </header>\n    );\n  }\n);\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/auth/authReducer\";\nimport { RootStateType } from \"../../redux/redux-store\";\nimport { selectIsAuth, selectLogin } from \"../../redux/auth/authSelectors\";\n// IMPORTS\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  logout: () => void;\n};\ntype HeaderClassContainerPropsType = MapStatePropsType & MapDispatchPropsType;\n// TYPES\n\n// HeaderContainer --> HeaderClassContainer --> Header\nclass HeaderClassContainer extends React.PureComponent<HeaderClassContainerPropsType> {\n  render = () => {\n    return <Header {...this.props} />;\n  };\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n  isAuth: selectIsAuth(state),\n  login: selectLogin(state),\n});\n\nexport const HeaderContainer = connect<\n  MapStatePropsType,\n  MapDispatchPropsType,\n  unknown,\n  RootStateType\n>(mapStateToProps, {\n  logout,\n})(HeaderClassContainer);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\";\n\nexport const Navbar = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to={\"/profile\"} activeClassName={classes.active}>\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/dialogues\"} activeClassName={classes.active}>\n          Dialogues\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/users\"} activeClassName={classes.active}>\n          Users\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/news\"} activeClassName={classes.active}>\n          News\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/music\"} activeClassName={classes.active}>\n          Music\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/settings\"} activeClassName={classes.active}>\n          Settings\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n","import { RootStateType } from \"../redux-store\";\n\nexport const selectIsInitialized = (state: RootStateType): boolean =>\n  state.app.isInitialized;\n","import React, { ComponentType, Suspense } from \"react\";\nimport { Preloader } from \"../components/common/Preloader/Preloader\";\n\nexport function withSuspense<T>(Component: ComponentType<T>) {\n  return (props: any) => {\n    return (\n      <Suspense fallback={<Preloader />}>\n        <Component {...(props as T)} />\n      </Suspense>\n      // <Suspense /> will display <Preloader /> while <ProfileContainer /> is loading\n    );\n  };\n}\n","import React from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\nimport \"./AppContainer.css\";\nimport { HeaderContainer } from \"./components/Header/HeaderContainer\";\nimport { Navbar } from \"./components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { RootStateType } from \"./redux/redux-store\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app/appReducer\";\nimport { Preloader } from \"./components/common/Preloader/Preloader\";\nimport { selectIsInitialized } from \"./redux/app/appSelectors\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst UsersContainer = React.lazy(\n  () => import(\"./components/Users/UsersContainer\")\n);\nconst ProfileContainer = React.lazy(\n  () => import(\"./components/Profile/ProfileContainer\")\n);\nconst DialoguesContainer = React.lazy(\n  () => import(\"./components/Dialogues/DialoguesContainer\")\n);\nconst LoginContainer = React.lazy(\n  () => import(\"./components/Login/LoginContainer\")\n); // lazy-loaded components\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  initializeApp: () => void;\n};\ntype AppClassContainerPropsType = MapStatePropsType & MapDispatchPropsType;\n\nclass AppClassContainer extends React.PureComponent<AppClassContainerPropsType> {\n  componentDidMount() {\n    this.props.initializeApp();\n  }\n\n  render = () => {\n    if (!this.props.isInitialized) {\n      return <Preloader />;\n    } else {\n      return (\n        <div className={\"app-wrapper\"}>\n          <HeaderContainer />\n          <Navbar />\n          <div className={\"app-wrapper-content\"}>\n            <Route exact path={\"/\"} render={withSuspense(ProfileContainer)} />\n            <Route\n              path={\"/profile/:userID?\"}\n              render={withSuspense(ProfileContainer)}\n            />\n            <Route\n              path={\"/dialogues\"}\n              render={withSuspense(DialoguesContainer)}\n            />\n            <Route path={\"/users\"} render={withSuspense(UsersContainer)} />\n            <Route path={\"/login\"} render={withSuspense(LoginContainer)} />\n          </div>\n        </div>\n      );\n    }\n  };\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n  isInitialized: selectIsInitialized(state),\n});\n\nexport const AppContainer = compose<React.ComponentType>(\n  connect<MapStatePropsType, MapDispatchPropsType, unknown, RootStateType>(\n    mapStateToProps,\n    {\n      initializeApp,\n    }\n  ),\n  withRouter\n)(AppClassContainer);\n","import React from \"react\";\nimport \"./index.css\";\nimport { store } from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"./AppContainer\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","import { authAPI, ResultCode } from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\nimport { stopSubmit } from \"redux-form\";\n\ntype AuthInitialStateType = typeof authInitialState;\nexport type AuthReducerActionTypes = ReturnType<typeof setAuthUserData>;\n// TYPES\n\nconst authInitialState = {\n  id: null as number | null,\n  login: null as string | null,\n  email: null as string | null,\n  isAuth: false as boolean,\n};\n\nexport const authReducer = (\n  authState = authInitialState,\n  action: AuthReducerActionTypes\n): AuthInitialStateType => {\n  switch (action.type) {\n    case \"auth/SET_AUTH_USER_DATA\":\n      return { ...authState, ...action.payload };\n\n    default:\n      return authState;\n  }\n};\n// REDUCER\n\nexport const setAuthUserData = (\n  id: number | null,\n  email: string | null,\n  login: string | null,\n  isAuth: boolean\n) =>\n  ({\n    type: \"auth/SET_AUTH_USER_DATA\",\n    payload: {\n      id,\n      email,\n      login,\n      isAuth,\n    },\n  } as const);\n// ACs\n\nexport const getAuthUserData = (): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.me();\n    if (res.resultCode === ResultCode.Success) {\n      const { id, email, login } = res.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const login = (\n  email: string,\n  password: string,\n  rememberMe?: boolean\n): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.login(email, password, rememberMe);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(getAuthUserData()); // dispatching thunk from another thunk\n    } else {\n      alert(\"Incorrect email or password.\");\n      const errMessage = res.messages.length\n        ? res.messages[0]\n        : \"Incorrect log in data\";\n      dispatch(stopSubmit(\"loginForm\", { _error: errMessage }));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const logout = (): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.logout();\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(setAuthUserData(null, null, null, false));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\n// TCs\n","export default __webpack_public_path__ + \"static/media/preloader.f1283d50.gif\";","import React from \"react\";\nimport preloader from \"../../../assets/images/preloader.gif\";\nimport classes from \"./Preloader.module.css\";\n\nexport const Preloader = () => {\n  return <img src={preloader} className={classes.preloader} alt={\"Loading\"} />;\n};\n","import { RootStateType } from \"../redux-store\";\n\nexport const selectAuthUserID = (state: RootStateType): number | null =>\n  state.auth.id;\nexport const selectIsAuth = (state: RootStateType): boolean =>\n  state.auth.isAuth;\nexport const selectLogin = (state: RootStateType): string | null =>\n  state.auth.login;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZhVC\",\"loginBlock\":\"Header_loginBlock__1o6Be\"};","import { profileAPI, ResultCode, UserProfileType } from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\n\nexport type PostType = {\n  id: number;\n  postText: string;\n  likesCount: number;\n};\nexport type ProfileInitialStateType = typeof profileInitialState;\nexport type ProfileReducerActionTypes =\n  | ReturnType<typeof addPost>\n  | ReturnType<typeof deletePost>\n  | ReturnType<typeof setUserStatus>\n  | ReturnType<typeof setUserProfile>;\n// TYPES\n\nconst profileInitialState = {\n  posts: [\n    { id: 1, postText: \"what's up?\", likesCount: 3 },\n    { id: 2, postText: \"hey!\", likesCount: 1 },\n  ] as Array<PostType>,\n  userProfile: {} as UserProfileType,\n  status: \"\",\n};\n\nexport const profileReducer = (\n  profileState = profileInitialState,\n  action: ProfileReducerActionTypes\n): ProfileInitialStateType => {\n  switch (action.type) {\n    case \"profile/ADD_POST\": {\n      const updatedState = { ...profileState, posts: [...profileState.posts] };\n      const newPost = {\n        id: updatedState.posts.length + 1,\n        postText: action.newPostText,\n        likesCount: 0,\n      };\n      return { ...updatedState, posts: [newPost, ...updatedState.posts] };\n    }\n\n    case \"profile/DELETE_POST\": {\n      return {\n        ...profileState,\n        posts: profileState.posts.filter((post) => post.id !== action.postID),\n      };\n    }\n\n    case \"profile/SET_USER_PROFILE\":\n      return { ...profileState, userProfile: action.userProfile };\n\n    case \"profile/SET_USER_STATUS\":\n      return { ...profileState, status: action.status };\n\n    default:\n      return profileState;\n  }\n};\n// REDUCER\n\nexport const addPost = (newPostText: string) =>\n  ({\n    type: \"profile/ADD_POST\",\n    newPostText,\n  } as const);\nexport const deletePost = (postID: number) =>\n  ({\n    type: \"profile/DELETE_POST\",\n    postID,\n  } as const);\nexport const setUserProfile = (userProfile: UserProfileType) =>\n  ({\n    type: \"profile/SET_USER_PROFILE\",\n    userProfile,\n  } as const);\nexport const setUserStatus = (status: string) =>\n  ({\n    type: \"profile/SET_USER_STATUS\",\n    status,\n  } as const);\n// ACs\n\nexport const getUserProfile = (userID: number): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.getProfile(userID);\n    dispatch(setUserProfile(res));\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const getUserStatus = (userID: number): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.getStatus(userID);\n    dispatch(setUserStatus(res));\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const updateUserStatus = (status: string): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.updateStatus(status);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(setUserStatus(status));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\n// TCs\n","import axios from \"axios\";\n\nexport type UserProfileType = {\n  aboutMe: string;\n  userId: number;\n  lookingForAJob: boolean;\n  lookingForAJobDescription: string;\n  fullName: string;\n  contacts: UserContactsType;\n  photos: PhotosType;\n};\nexport type UserType = {\n  id: number;\n  name: string;\n  status: string | null;\n  followed: boolean;\n  photos: PhotosType;\n};\ntype ResponseType<D = {}> = {\n  resultCode: ResultCode;\n  messages: Array<string>;\n  data: D;\n};\ntype GetMeDataResponseType = {\n  id: number;\n  email: string;\n  login: string;\n};\ntype UserContactsType = {\n  github: string;\n  vk: string;\n  facebook: string;\n  instagram: string;\n  twitter: string;\n  website: string;\n  youtube: string;\n  mainLink: string;\n};\ntype PhotosType = {\n  small: string;\n  large: string;\n};\ntype GetUsersResponseType = {\n  items: Array<UserType>;\n  totalCount: number;\n  error: string | null;\n};\n\nexport enum ResultCode {\n  Success = 0,\n  Error = 1,\n  Captcha = 10,\n}\n\n// TYPES\n\nconst axiosInstance = axios.create({\n  headers: {\n    \"API-KEY\": \"264a0581-6cdc-4a28-9b7e-b8b5b1060aa0\",\n  },\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n});\n\nexport const usersAPI = {\n  getUsers(currentPageNumber: number = 1, pageSize: number = 100) {\n    return axiosInstance\n      .get<GetUsersResponseType>(\n        `users?page=${currentPageNumber}&count=${pageSize}`\n      )\n      .then((res) => res.data);\n  },\n  follow(userID: number) {\n    return axiosInstance\n      .post<ResponseType>(`follow/${userID}`)\n      .then((res) => res.data);\n  },\n  unfollow(userID: number) {\n    return axiosInstance\n      .delete<ResponseType>(`follow/${userID}`)\n      .then((res) => res.data);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userID: number) {\n    return axiosInstance\n      .get<UserProfileType>(`profile/${userID}`)\n      .then((res) => res.data);\n  },\n  getStatus(userID: number) {\n    return axiosInstance\n      .get<string>(`profile/status/${userID}`)\n      .then((res) => res.data);\n  },\n  updateStatus(status: string) {\n    return axiosInstance\n      .put<ResponseType>(`profile/status`, { status })\n      .then((res) => res.data);\n  },\n};\n\nexport const authAPI = {\n  me() {\n    return axiosInstance\n      .get<ResponseType<GetMeDataResponseType>>(`auth/me`)\n      .then((res) => res.data);\n  },\n  login(email: string, password: string, rememberMe?: boolean) {\n    return axiosInstance\n      .post<ResponseType<{ userId?: number }>>(`/auth/login`, {\n        email,\n        password,\n        rememberMe,\n      })\n      .then((res) => res.data);\n  },\n  logout() {\n    return axiosInstance\n      .delete<ResponseType>(`/auth/login`)\n      .then((res) => res.data);\n  },\n};\n","export type DialogueItemType = {\n  id: number;\n  personName: string;\n};\nexport type MessageType = {\n  id: number;\n  messageText: string;\n};\ntype DialoguesInitialStateType = typeof dialoguesInitialState;\nexport type DialoguesReducerActionTypes = ReturnType<typeof sendMessage>;\n// TYPES\n\nconst dialoguesInitialState = {\n  dialogues: [\n    { id: 1, personName: \"Stacy\" },\n    { id: 2, personName: \"Gracy\" },\n    { id: 3, personName: \"Mike\" },\n    { id: 4, personName: \"Sam\" },\n    { id: 5, personName: \"Sanya\" },\n  ] as Array<DialogueItemType>,\n  messages: [\n    { id: 1, messageText: \"Hola!\" },\n    { id: 2, messageText: \"Meow\" },\n    { id: 3, messageText: \"What's up?\" },\n    { id: 4, messageText: \"Where have you been?\" },\n    { id: 5, messageText: \"See you soon!\" },\n  ] as Array<MessageType>,\n};\n\nexport const dialoguesReducer = (\n  dialoguesState = dialoguesInitialState,\n  action: DialoguesReducerActionTypes\n): DialoguesInitialStateType => {\n  switch (action.type) {\n    case \"dialogues/SEND_MESSAGE\": {\n      const updatedState = {\n        ...dialoguesState,\n        messages: [...dialoguesState.messages],\n      };\n      updatedState.messages.push({\n        id: updatedState.messages.length + 1,\n        messageText: action.newMessageText,\n      });\n      return updatedState;\n    }\n\n    default:\n      return dialoguesState;\n  }\n};\n// REDUCER\n\nexport const sendMessage = (newMessageText: string) =>\n  ({\n    type: \"dialogues/SEND_MESSAGE\",\n    newMessageText,\n  } as const);\n// ACs\n","import { ResultCode, usersAPI, UserType } from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\n\ntype UsersInitialStateType = typeof usersInitialState;\nexport type UsersReducerActionTypes =\n  | ReturnType<typeof followSuccess>\n  | ReturnType<typeof unfollowSuccess>\n  | ReturnType<typeof setUsers>\n  | ReturnType<typeof setCurrentPage>\n  | ReturnType<typeof setTotalUsersCount>\n  | ReturnType<typeof setIsFetching>\n  | ReturnType<typeof setFollowingProgress>;\n// TYPES\n\nconst usersInitialState = {\n  users: [] as Array<UserType>,\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n};\n\nexport const usersReducer = (\n  usersState = usersInitialState,\n  action: UsersReducerActionTypes\n): UsersInitialStateType => {\n  switch (action.type) {\n    case \"users/FOLLOW\":\n      return {\n        ...usersState,\n        users: usersState.users.map((user) =>\n          user.id === action.userID ? { ...user, followed: true } : user\n        ), // also copying USER to be changed\n      };\n\n    case \"users/UNFOLLOW\":\n      return {\n        ...usersState,\n        users: usersState.users.map((user) =>\n          user.id === action.userID ? { ...user, followed: false } : user\n        ),\n      };\n\n    case \"users/SET_USERS\":\n      return { ...usersState, users: action.users };\n\n    case \"users/SET_CURRENT_PAGE\":\n      return { ...usersState, currentPage: action.currentPage };\n\n    case \"users/SET_TOTAL_USERS_COUNT\":\n      return { ...usersState, totalUsersCount: action.totalUsersCount };\n\n    case \"users/SET_IS_FETCHING\":\n      return { ...usersState, isFetching: action.newIsFetching };\n\n    case \"users/SET_FOLLOWING_PROGRESS\":\n      return {\n        ...usersState,\n        followingInProgress: action.followingInProgress\n          ? [...usersState.followingInProgress, action.userID]\n          : usersState.followingInProgress.filter((id) => id !== action.userID),\n      };\n\n    default:\n      return usersState;\n  }\n};\n// REDUCER\n\nexport const followSuccess = (userID: number) =>\n  ({\n    type: \"users/FOLLOW\",\n    userID,\n  } as const);\nexport const unfollowSuccess = (userID: number) =>\n  ({\n    type: \"users/UNFOLLOW\",\n    userID,\n  } as const);\nexport const setUsers = (users: Array<UserType>) =>\n  ({\n    type: \"users/SET_USERS\",\n    users,\n  } as const);\nexport const setCurrentPage = (currentPage: number) =>\n  ({\n    type: \"users/SET_CURRENT_PAGE\",\n    currentPage,\n  } as const);\nexport const setTotalUsersCount = (totalUsersCount: number) =>\n  ({\n    type: \"users/SET_TOTAL_USERS_COUNT\",\n    totalUsersCount,\n  } as const);\nexport const setIsFetching = (newIsFetching: boolean) =>\n  ({\n    type: \"users/SET_IS_FETCHING\",\n    newIsFetching,\n  } as const);\nexport const setFollowingProgress = (\n  userID: number,\n  followingInProgress: boolean\n) =>\n  ({\n    type: \"users/SET_FOLLOWING_PROGRESS\",\n    userID,\n    followingInProgress,\n  } as const);\n// ACs\n\nexport const fetchUsers = (\n  currentPageNumber: number,\n  pageSize: number\n): RootThunkType => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  try {\n    const res = await usersAPI.getUsers(currentPageNumber, pageSize);\n    if (!res.error) {\n      dispatch(setUsers(res.items));\n      dispatch(setTotalUsersCount(res.totalCount));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n  dispatch(setIsFetching(false));\n};\nexport const follow = (userID: number): RootThunkType => async (dispatch) => {\n  dispatch(setFollowingProgress(userID, true));\n  try {\n    const res = await usersAPI.follow(userID);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(followSuccess(userID));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n  dispatch(setFollowingProgress(userID, false));\n};\nexport const unfollow = (userID: number): RootThunkType => async (dispatch) => {\n  dispatch(setFollowingProgress(userID, true));\n  try {\n    const res = await usersAPI.unfollow(userID);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(unfollowSuccess(userID));\n    }\n  } catch (e) {\n    console.log(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n  dispatch(setFollowingProgress(userID, false));\n};\n// TCs\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1E9dh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__g8jcu\",\"item\":\"Navbar_item__2BmSg\",\"active\":\"Navbar_active__3YPzP\"};"],"sourceRoot":""}