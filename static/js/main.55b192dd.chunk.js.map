{"version":3,"sources":["components/Navbar/Navbar.module.css","redux/app/appReducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/Navbar.tsx","redux/app/appSelectors.ts","hoc/withSuspense.tsx","AppContainer.tsx","index.tsx","redux/auth/authReducer.ts","redux/users/usersReducer.ts","assets/images/preloader.gif","components/common/Preloader/Preloader.tsx","redux/auth/authSelectors.ts","components/Header/Header.module.css","redux/profile/profileReducer.ts","api/API.ts","redux/dialogues/dialoguesReducer.ts","components/common/Preloader/Preloader.module.css"],"names":["module","exports","appInitialState","isInitialized","rootReducer","combineReducers","profilePage","profileReducer","dialoguesPage","dialoguesReducer","usersPage","usersReducer","auth","authReducer","app","appState","action","type","payload","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","Header","React","memo","isAuth","login","logout","className","classes","header","src","alt","loginBlock","onClick","to","HeaderClassContainer","render","props","PureComponent","HeaderContainer","connect","state","selectIsAuth","selectLogin","Navbar","nav","item","activeClassName","active","selectIsInitialized","withSuspense","Component","fallback","Preloader","UsersContainer","lazy","ProfileContainer","DialoguesContainer","LoginContainer","AppClassContainer","catchUnhandledRejections","event","console","warn","reason","path","from","this","initializeApp","addEventListener","removeEventListener","AppContainer","dispatch","a","getAuthUserData","withRouter","ReactDOM","document","getElementById","authInitialState","id","email","captchaURL","authState","setAuthUserData","setCaptchaURL","authAPI","me","res","resultCode","ResultCode","Success","data","alert","password","rememberMe","captcha","setCurrentPage","Captcha","getCaptchaURL","errMessage","messages","length","stopSubmit","_error","securityAPI","getCaptcha","url","usersInitialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","usersState","map","user","userID","followed","filter","followSuccess","unfollowSuccess","setIsFetching","newIsFetching","setFollowingProgress","fetchUsers","currentPageNumber","usersAPI","getUsers","error","items","totalCount","follow","unfollow","preloader","selectAuthUserID","selectCaptchaURL","profileInitialState","posts","postText","likesCount","userProfile","status","profileState","updatedState","newPost","newPostText","post","postID","photos","addPost","deletePost","setProfileStatus","getUserProfile","profileAPI","getProfile","getProfileStatus","getStatus","updateProfileStatus","updateStatus","updateProfilePhoto","photo","updatePhoto","axiosInstance","axios","create","headers","baseURL","withCredentials","get","then","delete","put","image","formData","FormData","append","dialoguesInitialState","dialogues","personName","messageText","dialoguesState","push","newMessageText","sendMessage"],"mappings":"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","file":"static/js/main.55b192dd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__g8jcu\",\"item\":\"Navbar_item__2BmSg\",\"active\":\"Navbar_active__3YPzP\"};","import { RootThunkType } from \"../redux-store\";\nimport { getAuthUserData } from \"../auth/authReducer\";\n\ntype AppInitialStateType = typeof appInitialState;\nexport type AppReducerActionTypes = ReturnType<typeof setInitialized>;\n// TYPES\n\nconst appInitialState = { isInitialized: false };\n\nexport const appReducer = (\n  appState = appInitialState,\n  action: AppReducerActionTypes\n): AppInitialStateType => {\n  switch (action.type) {\n    case \"app/SET_INITIALIZED\":\n      return { ...appState, ...action.payload };\n\n    default:\n      return appState;\n  }\n};\n// REDUCER\n\nexport const setInitialized = (isInitialized: boolean) =>\n  ({\n    type: \"app/SET_INITIALIZED\",\n    payload: {\n      isInitialized,\n    },\n  } as const);\n// ACs\n\nexport const initializeApp = (): RootThunkType => async (dispatch) => {\n  try {\n    // dispatch(getAuthUserData()) - returns promise\n    await dispatch(getAuthUserData());\n    dispatch(setInitialized(true));\n  } catch (e) {\n    console.warn(e);\n  }\n};\n// TCs\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\nimport {\n  profileReducer,\n  ProfileReducerActionTypes,\n} from \"./profile/profileReducer\";\nimport {\n  dialoguesReducer,\n  DialoguesReducerActionTypes,\n} from \"./dialogues/dialoguesReducer\";\nimport { usersReducer, UsersReducerActionTypes } from \"./users/usersReducer\";\nimport { authReducer, AuthReducerActionTypes } from \"./auth/authReducer\";\nimport thunk, { ThunkAction } from \"redux-thunk\";\nimport { FormAction, reducer as formReducer } from \"redux-form\";\nimport { appReducer, AppReducerActionTypes } from \"./app/appReducer\";\n\nexport type RootStateType = ReturnType<typeof rootReducer>;\nexport type RootActionTypes =\n  | UsersReducerActionTypes\n  | AuthReducerActionTypes\n  | ProfileReducerActionTypes\n  | DialoguesReducerActionTypes\n  | AppReducerActionTypes\n  | FormAction; // type of action objects of all reducers\n// ReturnType = void || Promise<void>\nexport type RootThunkType<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootStateType,\n  unknown,\n  RootActionTypes\n>; // type of thunk creator function to be able to dispatch another thunk\n\nconst rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialoguesPage: dialoguesReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  app: appReducer,\n  form: formReducer,\n});\n\n// configuring Redux DevTools for this app\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\n// @ts-ignore\nwindow.store = store;\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport classes from \"./Header.module.css\";\n\ntype HeaderPropsType = {\n  isAuth: boolean;\n  login: string | null;\n  logout: () => void;\n};\n\nexport const Header = React.memo(\n  ({ isAuth, login, logout }: HeaderPropsType) => {\n    return (\n      <header className={classes.header}>\n        <img\n          src={\"https://cdn.logo.com/hotlink-ok/logo-social-sq.png\"}\n          alt={\"Logo\"}\n        />\n        <div className={classes.loginBlock}>\n          {isAuth ? (\n            <div>\n              {login} - <button onClick={logout}>Log out</button>\n            </div>\n          ) : (\n            <NavLink to={\"/login\"}>Log in</NavLink>\n          )}\n        </div>\n      </header>\n    );\n  }\n);\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../redux/auth/authReducer\";\nimport { RootStateType } from \"../../redux/redux-store\";\nimport { selectIsAuth, selectLogin } from \"../../redux/auth/authSelectors\";\n// IMPORTS\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  logout: () => void;\n};\ntype HeaderClassContainerPropsType = MapStatePropsType & MapDispatchPropsType;\n// TYPES\n\n// HeaderContainer --> HeaderClassContainer --> Header\nclass HeaderClassContainer extends React.PureComponent<HeaderClassContainerPropsType> {\n  render = () => {\n    return <Header {...this.props} />;\n  };\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n  isAuth: selectIsAuth(state),\n  login: selectLogin(state),\n});\n\nexport const HeaderContainer = connect<\n  MapStatePropsType,\n  MapDispatchPropsType,\n  unknown,\n  RootStateType\n>(mapStateToProps, {\n  logout,\n})(HeaderClassContainer);\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport classes from \"./Navbar.module.css\";\n\nexport const Navbar = () => {\n  return (\n    <nav className={classes.nav}>\n      <div className={classes.item}>\n        <NavLink to={\"/profile\"} activeClassName={classes.active}>\n          Profile\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/dialogues\"} activeClassName={classes.active}>\n          Dialogues\n        </NavLink>\n      </div>\n      <div className={classes.item}>\n        <NavLink to={\"/users\"} activeClassName={classes.active}>\n          Users\n        </NavLink>\n      </div>\n    </nav>\n  );\n};\n","import { RootStateType } from \"../redux-store\";\n\nexport const selectIsInitialized = (state: RootStateType): boolean =>\n  state.app.isInitialized;\n","import React, { ComponentProps, ComponentType, Suspense } from \"react\";\nimport { Preloader } from \"../components/common/Preloader/Preloader\";\n\nexport function withSuspense<T>(Component: ComponentType<T>) {\n  return (props: ComponentProps<any>) => {\n    return (\n      <Suspense fallback={<Preloader />}>\n        <Component {...(props as T)} />\n      </Suspense>\n      // <Suspense /> will display <Preloader /> while <ProfileContainer /> is loading\n    );\n  };\n}\n","import React from \"react\";\nimport { Redirect, Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./AppContainer.css\";\nimport { HeaderContainer } from \"./components/Header/HeaderContainer\";\nimport { Navbar } from \"./components/Navbar/Navbar\";\nimport { connect } from \"react-redux\";\nimport { RootStateType } from \"./redux/redux-store\";\nimport { compose } from \"redux\";\nimport { initializeApp } from \"./redux/app/appReducer\";\nimport { Preloader } from \"./components/common/Preloader/Preloader\";\nimport { selectIsInitialized } from \"./redux/app/appSelectors\";\nimport { withSuspense } from \"./hoc/withSuspense\";\n\nconst UsersContainer = React.lazy(\n  () => import(\"./components/Users/UsersContainer\")\n);\nconst ProfileContainer = React.lazy(\n  () => import(\"./components/Profile/ProfileContainer\")\n);\nconst DialoguesContainer = React.lazy(\n  () => import(\"./components/Dialogues/DialoguesContainer\")\n);\nconst LoginContainer = React.lazy(\n  () => import(\"./components/Login/LoginContainer\")\n); // lazy-loaded components\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  initializeApp: () => void;\n};\ntype AppClassContainerPropsType = MapStatePropsType & MapDispatchPropsType;\n\nclass AppClassContainer extends React.PureComponent<AppClassContainerPropsType> {\n  componentDidMount() {\n    this.props.initializeApp();\n\n    window.addEventListener(\n      \"unhandledrejection\",\n      this.catchUnhandledRejections\n    );\n  }\n\n  // clearing subscription on component unmount\n  componentWillUnmount() {\n    window.removeEventListener(\n      \"unhandledrejection\",\n      this.catchUnhandledRejections\n    );\n  }\n\n  // subscribing to all unhandled promise rejections\n  catchUnhandledRejections = (event: PromiseRejectionEvent) => {\n    console.warn(`UNHANDLED PROMISE REJECTION: ${event.reason}`);\n  };\n\n  render = () => {\n    if (!this.props.isInitialized) {\n      return <Preloader />;\n    } else {\n      return (\n        <div className={\"app-wrapper\"}>\n          <HeaderContainer />\n          <Navbar />\n          <div className={\"app-wrapper-content\"}>\n            <Switch>\n              <Route\n                path={\"/profile/:userID?\"}\n                render={withSuspense(ProfileContainer)}\n              />\n              <Route\n                path={\"/dialogues\"}\n                render={withSuspense(DialoguesContainer)}\n              />\n              <Route path={\"/users\"} render={withSuspense(UsersContainer)} />\n              <Route path={\"/login\"} render={withSuspense(LoginContainer)} />\n              <Redirect from={\"/\"} to={\"/profile\"} />\n              <Redirect from={\"*\"} to={\"/profile\"} />\n            </Switch>\n          </div>\n        </div>\n      );\n    }\n  };\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n  isInitialized: selectIsInitialized(state),\n});\n\nexport const AppContainer = compose<React.ComponentType>(\n  connect<MapStatePropsType, MapDispatchPropsType, unknown, RootStateType>(\n    mapStateToProps,\n    {\n      initializeApp,\n    }\n  ),\n  withRouter\n)(AppClassContainer);\n","import React from \"react\";\nimport \"./index.css\";\nimport { store } from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport { AppContainer } from \"./AppContainer\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n","import { authAPI, ResultCode, securityAPI } from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\nimport { stopSubmit } from \"redux-form\";\nimport { setCurrentPage } from \"../users/usersReducer\";\n\ntype AuthInitialStateType = typeof authInitialState;\nexport type AuthReducerActionTypes =\n  | ReturnType<typeof setAuthUserData>\n  | ReturnType<typeof setCaptchaURL>;\n// TYPES\n\nconst authInitialState = {\n  id: null as number | null,\n  login: null as string | null,\n  email: null as string | null,\n  isAuth: false as boolean,\n  captchaURL: null as null | string,\n};\n\nexport const authReducer = (\n  authState = authInitialState,\n  action: AuthReducerActionTypes\n): AuthInitialStateType => {\n  switch (action.type) {\n    case \"auth/SET_AUTH_USER_DATA\":\n    case \"auth/SET_CAPTCHA_URL\":\n      return { ...authState, ...action.payload };\n\n    default:\n      return authState;\n  }\n};\n// REDUCER\n\nexport const setAuthUserData = (\n  id: number | null,\n  email: string | null,\n  login: string | null,\n  isAuth: boolean\n) =>\n  ({\n    type: \"auth/SET_AUTH_USER_DATA\",\n    payload: {\n      id,\n      email,\n      login,\n      isAuth,\n    },\n  } as const);\nexport const setCaptchaURL = (captchaURL: string | null) =>\n  ({\n    type: \"auth/SET_CAPTCHA_URL\",\n    payload: {\n      captchaURL,\n    },\n  } as const);\n// ACs\n\nexport const getAuthUserData = (): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.me();\n    if (res.resultCode === ResultCode.Success) {\n      const { id, email, login } = res.data;\n      dispatch(setAuthUserData(id, email, login, true));\n    }\n  } catch (e) {\n    console.warn(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const login = (\n  email: string,\n  password: string,\n  rememberMe?: boolean,\n  captcha?: string\n): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.login(email, password, rememberMe, captcha);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(getAuthUserData()); // dispatching thunk from another thunk\n      dispatch(setCurrentPage(1));\n    } else {\n      if (res.resultCode === ResultCode.Captcha) {\n        dispatch(getCaptchaURL()); // dispatching thunk from another thunk\n      }\n      const errMessage = res.messages.length\n        ? res.messages[0]\n        : \"Incorrect log in data\";\n      alert(errMessage);\n      dispatch(stopSubmit(\"loginForm\", { _error: errMessage }));\n    }\n  } catch (e) {\n    console.warn(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\nexport const logout = (): RootThunkType => async (dispatch) => {\n  try {\n    const res = await authAPI.logout();\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(setAuthUserData(null, null, null, false));\n      dispatch(setCaptchaURL(null));\n      dispatch(setCurrentPage(1));\n    } else {\n      const errMessage = res.messages[0];\n      alert(errMessage);\n      console.warn(errMessage); // handling errors by resultCode\n    }\n  } catch (e) {\n    console.warn(e);\n    alert(\"An error has occurred. Please try again later.\"); // handling errors by status code\n  }\n};\nexport const getCaptchaURL = (): RootThunkType => async (dispatch) => {\n  try {\n    const res = await securityAPI.getCaptcha();\n    const captchaURL = res.url;\n    dispatch(setCaptchaURL(captchaURL));\n  } catch (e) {\n    console.warn(e);\n    alert(\"An error has occurred. Please try again later.\");\n  }\n};\n// TCs\n","import { ResultCode, usersAPI, UserType } from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\n\ntype UsersInitialStateType = typeof usersInitialState;\nexport type UsersReducerActionTypes =\n  | ReturnType<typeof followSuccess>\n  | ReturnType<typeof unfollowSuccess>\n  | ReturnType<typeof setUsers>\n  | ReturnType<typeof setCurrentPage>\n  | ReturnType<typeof setTotalUsersCount>\n  | ReturnType<typeof setIsFetching>\n  | ReturnType<typeof setFollowingProgress>;\n// TYPES\n\nconst usersInitialState = {\n  users: [] as Array<UserType>,\n  pageSize: 100,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  followingInProgress: [] as Array<number>,\n};\n\nexport const usersReducer = (\n  usersState = usersInitialState,\n  action: UsersReducerActionTypes\n): UsersInitialStateType => {\n  switch (action.type) {\n    case \"users/FOLLOW\":\n      return {\n        ...usersState,\n        users: usersState.users.map((user) =>\n          user.id === action.payload.userID ? { ...user, followed: true } : user\n        ), // also copying USER to be changed\n      };\n\n    case \"users/UNFOLLOW\":\n      return {\n        ...usersState,\n        users: usersState.users.map((user) =>\n          user.id === action.payload.userID\n            ? { ...user, followed: false }\n            : user\n        ),\n      };\n\n    case \"users/SET_USERS\":\n    case \"users/SET_CURRENT_PAGE\":\n    case \"users/SET_TOTAL_USERS_COUNT\":\n    case \"users/SET_IS_FETCHING\":\n      return { ...usersState, ...action.payload }; // multiple cases with the same code block to execute\n\n    case \"users/SET_FOLLOWING_PROGRESS\":\n      return {\n        ...usersState,\n        followingInProgress: action.payload.followingInProgress\n          ? [...usersState.followingInProgress, action.payload.userID]\n          : usersState.followingInProgress.filter(\n              (id) => id !== action.payload.userID\n            ),\n      };\n\n    default:\n      return usersState;\n  }\n};\n// REDUCER\n\nexport const followSuccess = (userID: number) =>\n  ({\n    type: \"users/FOLLOW\",\n    payload: {\n      userID,\n    },\n  } as const);\nexport const unfollowSuccess = (userID: number) =>\n  ({\n    type: \"users/UNFOLLOW\",\n    payload: {\n      userID,\n    },\n  } as const);\nexport const setUsers = (users: Array<UserType>) =>\n  ({\n    type: \"users/SET_USERS\",\n    payload: {\n      users,\n    },\n  } as const);\nexport const setCurrentPage = (currentPage: number) =>\n  ({\n    type: \"users/SET_CURRENT_PAGE\",\n    payload: {\n      currentPage,\n    },\n  } as const);\nexport const setTotalUsersCount = (totalUsersCount: number) =>\n  ({\n    type: \"users/SET_TOTAL_USERS_COUNT\",\n    payload: {\n      totalUsersCount,\n    },\n  } as const);\nexport const setIsFetching = (newIsFetching: boolean) =>\n  ({\n    type: \"users/SET_IS_FETCHING\",\n    payload: {\n      newIsFetching,\n    },\n  } as const);\nexport const setFollowingProgress = (\n  userID: number,\n  followingInProgress: boolean\n) =>\n  ({\n    type: \"users/SET_FOLLOWING_PROGRESS\",\n    payload: {\n      userID,\n      followingInProgress,\n    },\n  } as const);\n// ACs\n\nexport const fetchUsers = (\n  currentPageNumber: number,\n  pageSize: number\n): RootThunkType => async (dispatch) => {\n  dispatch(setIsFetching(true));\n  try {\n    const res = await usersAPI.getUsers(currentPageNumber, pageSize);\n    if (!res.error) {\n      dispatch(setUsers(res.items));\n      dispatch(setTotalUsersCount(res.totalCount));\n    } else {\n      const errMessage = res.error;\n      alert(errMessage);\n      console.warn(errMessage);\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n  dispatch(setIsFetching(false));\n};\nexport const follow = (userID: number): RootThunkType => async (dispatch) => {\n  dispatch(setFollowingProgress(userID, true));\n  try {\n    const res = await usersAPI.follow(userID);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(followSuccess(userID));\n    } else {\n      const errMessage = res.messages[0];\n      alert(errMessage);\n      console.warn(errMessage);\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n  dispatch(setFollowingProgress(userID, false));\n};\nexport const unfollow = (userID: number): RootThunkType => async (dispatch) => {\n  dispatch(setFollowingProgress(userID, true));\n  try {\n    const res = await usersAPI.unfollow(userID);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(unfollowSuccess(userID));\n    } else {\n      const errMessage = res.messages[0];\n      alert(errMessage);\n      console.warn(errMessage);\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n  dispatch(setFollowingProgress(userID, false));\n};\n// TCs\n","export default __webpack_public_path__ + \"static/media/preloader.f1283d50.gif\";","import React from \"react\";\nimport preloader from \"../../../assets/images/preloader.gif\";\nimport classes from \"./Preloader.module.css\";\n\nexport const Preloader = () => {\n  return <img src={preloader} className={classes.preloader} alt={\"Loading\"} />;\n};\n","import { RootStateType } from \"../redux-store\";\n\nexport const selectAuthUserID = (state: RootStateType): number | null =>\n  state.auth.id;\nexport const selectIsAuth = (state: RootStateType): boolean =>\n  state.auth.isAuth;\nexport const selectLogin = (state: RootStateType): string | null =>\n  state.auth.login;\nexport const selectCaptchaURL = (state: RootStateType): null | string =>\n  state.auth.captchaURL;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2ZhVC\",\"loginBlock\":\"Header_loginBlock__1o6Be\"};","import {\n  PhotosType,\n  profileAPI,\n  ResultCode,\n  UserProfileType,\n} from \"../../api/API\";\nimport { RootThunkType } from \"../redux-store\";\n\nexport type PostType = {\n  id: number;\n  postText: string;\n  likesCount: number;\n};\nexport type ProfileInitialStateType = typeof profileInitialState;\nexport type ProfileReducerActionTypes =\n  | ReturnType<typeof addPost>\n  | ReturnType<typeof deletePost>\n  | ReturnType<typeof setProfileStatus>\n  | ReturnType<typeof setProfilePhoto>\n  | ReturnType<typeof setUserProfile>;\n// TYPES\n\nconst profileInitialState = {\n  posts: [\n    { id: 1, postText: \"what's up?\", likesCount: 3 },\n    { id: 2, postText: \"hey!\", likesCount: 1 },\n  ] as Array<PostType>,\n  userProfile: {} as UserProfileType,\n  status: \"\",\n};\n\nexport const profileReducer = (\n  profileState = profileInitialState,\n  action: ProfileReducerActionTypes\n): ProfileInitialStateType => {\n  switch (action.type) {\n    case \"profile/ADD_POST\": {\n      const updatedState = { ...profileState, posts: [...profileState.posts] };\n      const newPost = {\n        id: updatedState.posts.length + 1,\n        postText: action.payload.newPostText,\n        likesCount: 0,\n      };\n      return { ...updatedState, posts: [newPost, ...updatedState.posts] };\n    }\n\n    case \"profile/DELETE_POST\": {\n      return {\n        ...profileState,\n        posts: profileState.posts.filter(\n          (post) => post.id !== action.payload.postID\n        ),\n      };\n    }\n\n    case \"profile/SET_USER_PROFILE\":\n    case \"profile/SET_PROFILE_STATUS\":\n      return { ...profileState, ...action.payload };\n\n    case \"profile/SET_PROFILE_PHOTO\":\n      return {\n        ...profileState,\n        userProfile: {\n          ...profileState.userProfile,\n          photos: action.payload.photos,\n        },\n      };\n\n    default:\n      return profileState;\n  }\n};\n// REDUCER\n\nexport const addPost = (newPostText: string) =>\n  ({\n    type: \"profile/ADD_POST\",\n    payload: {\n      newPostText,\n    },\n  } as const);\nexport const deletePost = (postID: number) =>\n  ({\n    type: \"profile/DELETE_POST\",\n    payload: {\n      postID,\n    },\n  } as const);\nexport const setUserProfile = (userProfile: UserProfileType) =>\n  ({\n    type: \"profile/SET_USER_PROFILE\",\n    payload: {\n      userProfile,\n    },\n  } as const);\nexport const setProfileStatus = (status: string) =>\n  ({\n    type: \"profile/SET_PROFILE_STATUS\",\n    payload: {\n      status,\n    },\n  } as const);\nexport const setProfilePhoto = (photos: PhotosType) =>\n  ({\n    type: \"profile/SET_PROFILE_PHOTO\",\n    payload: {\n      photos,\n    },\n  } as const);\n// ACs\n\nexport const getUserProfile = (userID: number): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.getProfile(userID);\n    dispatch(setUserProfile(res));\n  } catch (e) {\n    console.warn(e);\n  }\n};\nexport const getProfileStatus = (userID: number): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.getStatus(userID);\n    dispatch(setProfileStatus(res));\n  } catch (e) {\n    console.warn(e);\n  }\n};\nexport const updateProfileStatus = (status: string): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.updateStatus(status);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(setProfileStatus(status));\n    } else {\n      const errMessage = res.messages[0];\n      alert(errMessage);\n      console.warn(errMessage);\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n};\nexport const updateProfilePhoto = (photo: File): RootThunkType => async (\n  dispatch\n) => {\n  try {\n    const res = await profileAPI.updatePhoto(photo);\n    if (res.resultCode === ResultCode.Success) {\n      dispatch(setProfilePhoto(res.data.photos));\n    } else {\n      const errMessage = res.messages[0];\n      alert(errMessage);\n      console.warn(errMessage);\n    }\n  } catch (e) {\n    console.warn(e);\n  }\n};\n// TCs\n","import axios from \"axios\";\n\nexport type UserProfileType = {\n  aboutMe: string;\n  userId: number;\n  lookingForAJob: boolean;\n  lookingForAJobDescription: string;\n  fullName: string;\n  contacts: ProfileContactsType;\n  photos: PhotosType;\n};\nexport type UserType = {\n  id: number;\n  name: string;\n  status: string | null;\n  followed: boolean;\n  photos: PhotosType;\n};\ntype ResponseType<D = {}> = {\n  resultCode: ResultCode;\n  messages: Array<string>;\n  data: D;\n};\ntype GetMeDataResponseType = {\n  id: number;\n  email: string;\n  login: string;\n};\nexport type ProfileContactsType = {\n  github: string;\n  vk: string;\n  facebook: string;\n  instagram: string;\n  twitter: string;\n  website: string;\n  youtube: string;\n  mainLink: string;\n};\nexport type PhotosType = {\n  small: string;\n  large: string;\n};\ntype GetUsersResponseType = {\n  items: Array<UserType>;\n  totalCount: number;\n  error: string | null;\n};\n\nexport enum ResultCode {\n  Success = 0,\n  Error = 1,\n  Captcha = 10,\n}\n\n// TYPES\n\nconst axiosInstance = axios.create({\n  headers: {\n    \"API-KEY\": \"264a0581-6cdc-4a28-9b7e-b8b5b1060aa0\",\n  },\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  withCredentials: true,\n});\n\nexport const usersAPI = {\n  getUsers(currentPageNumber: number = 1, pageSize: number = 100) {\n    return axiosInstance\n      .get<GetUsersResponseType>(\n        `users?page=${currentPageNumber}&count=${pageSize}`\n      )\n      .then((res) => res.data);\n  },\n  follow(userID: number) {\n    return axiosInstance\n      .post<ResponseType>(`follow/${userID}`)\n      .then((res) => res.data);\n  },\n  unfollow(userID: number) {\n    return axiosInstance\n      .delete<ResponseType>(`follow/${userID}`)\n      .then((res) => res.data);\n  },\n};\n\nexport const profileAPI = {\n  getProfile(userID: number) {\n    return axiosInstance\n      .get<UserProfileType>(`profile/${userID}`)\n      .then((res) => res.data);\n  },\n  getStatus(userID: number) {\n    return axiosInstance\n      .get<string>(`profile/status/${userID}`)\n      .then((res) => res.data);\n  },\n  updateStatus(status: string) {\n    return axiosInstance\n      .put<ResponseType>(`profile/status`, { status })\n      .then((res) => res.data);\n  },\n  updatePhoto(image: File) {\n    const formData = new FormData();\n    formData.append(\"image\", image); // creating formData object to send file to server\n\n    return axiosInstance\n      .put<ResponseType<{ photos: PhotosType }>>(`profile/photo`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        }, // configuring specific headers for the file sent\n      })\n      .then((res) => res.data);\n  },\n};\n\nexport const authAPI = {\n  me() {\n    return axiosInstance\n      .get<ResponseType<GetMeDataResponseType>>(`auth/me`)\n      .then((res) => res.data);\n  },\n  login(\n    email: string,\n    password: string,\n    rememberMe?: boolean,\n    captcha?: string\n  ) {\n    return axiosInstance\n      .post<ResponseType<{ userId?: number }>>(`/auth/login`, {\n        email,\n        password,\n        rememberMe,\n        captcha,\n      })\n      .then((res) => res.data);\n  },\n  logout() {\n    return axiosInstance\n      .delete<ResponseType>(`/auth/login`)\n      .then((res) => res.data);\n  },\n};\n\nexport const securityAPI = {\n  getCaptcha() {\n    return axiosInstance\n      .get<{ url: string }>(`security/get-captcha-url`)\n      .then((res) => res.data);\n  },\n};\n","export type DialogueItemType = {\n  id: number;\n  personName: string;\n};\nexport type MessageType = {\n  id: number;\n  messageText: string;\n};\ntype DialoguesInitialStateType = typeof dialoguesInitialState;\nexport type DialoguesReducerActionTypes = ReturnType<typeof sendMessage>;\n// TYPES\n\nconst dialoguesInitialState = {\n  dialogues: [\n    { id: 1, personName: \"Stacy\" },\n    { id: 2, personName: \"Gracy\" },\n    { id: 3, personName: \"Mike\" },\n    { id: 4, personName: \"Sam\" },\n    { id: 5, personName: \"Sanya\" },\n  ] as Array<DialogueItemType>,\n  messages: [\n    { id: 1, messageText: \"Hola!\" },\n    { id: 2, messageText: \"Meow\" },\n    { id: 3, messageText: \"What's up?\" },\n    { id: 4, messageText: \"Where have you been?\" },\n    { id: 5, messageText: \"See you soon!\" },\n  ] as Array<MessageType>,\n};\n\nexport const dialoguesReducer = (\n  dialoguesState = dialoguesInitialState,\n  action: DialoguesReducerActionTypes\n): DialoguesInitialStateType => {\n  switch (action.type) {\n    case \"dialogues/SEND_MESSAGE\": {\n      const updatedState = {\n        ...dialoguesState,\n        messages: [...dialoguesState.messages],\n      };\n      updatedState.messages.push({\n        id: updatedState.messages.length + 1,\n        messageText: action.payload.newMessageText,\n      });\n      return updatedState;\n    }\n\n    default:\n      return dialoguesState;\n  }\n};\n// REDUCER\n\nexport const sendMessage = (newMessageText: string) =>\n  ({\n    type: \"dialogues/SEND_MESSAGE\",\n    payload: {\n      newMessageText,\n    },\n  } as const);\n// ACs\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__1E9dh\"};"],"sourceRoot":""}