{"version":3,"sources":["assets/images/userAva.png","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/common/Paginator/Paginator.module.css","components/Users/User/User.module.css","components/common/Paginator/Paginator.tsx","components/Users/User/User.tsx","components/Users/Users.tsx","redux/users/usersSelectors.ts","components/Users/UsersContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","Paginator","React","memo","totalItemsCount","pageSize","onPageChange","currentPage","portionSize","useState","portionNumber","setPortionNumber","pagesCount","Math","ceil","portionsCount","leftPortionPageNumber","rightPortionPageNumber","pages","className","classes","paginator","onClick","btn","filter","page","map","selectedPage","User","user","followingInProgress","follow","unfollow","isAuth","to","id","src","photos","small","userAva","userPhoto","alt","followed","style","cursor","disabled","some","name","status","Users","totalUsersCount","users","selectUsers","state","usersPage","selectPageSize","selectTotalUsersCount","selectCurrentPage","selectIsFetching","isFetching","selectFollowingInProgress","UsersClassContainer","pageNumber","props","setCurrentPage","fetchUsers","render","Preloader","this","PureComponent","UsersContainer","connect","selectIsAuth"],"mappings":"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","file":"static/js/6.30c58ca0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/userAva.10691648.png\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1LueG\",\"page\":\"Paginator_page__344vq\",\"paginator\":\"Paginator_paginator__3JXq_\",\"btn\":\"Paginator_btn__2I2_0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"User_userPhoto__1ubH5\"};","import React, { useState } from \"react\";\nimport classes from \"./Paginator.module.css\";\n\ntype PaginatorPropsType = {\n  pageSize: number;\n  totalItemsCount: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n  portionSize: number;\n};\n\nexport const Paginator = React.memo(\n  ({\n    totalItemsCount,\n    pageSize,\n    onPageChange,\n    currentPage,\n    portionSize,\n  }: PaginatorPropsType) => {\n    const [portionNumber, setPortionNumber] = useState(1); // initial portion number to be displayed\n\n    const pagesCount = Math.ceil(totalItemsCount / pageSize); // Math.ceil() - rounding to higher integer\n    const portionsCount = Math.ceil(pagesCount / portionSize); // portionsCount === number of \"portions\", which pagination is split into\n\n    const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    const rightPortionPageNumber = portionNumber * portionSize;\n\n    const pages: Array<number> = [];\n    for (let i = 1; i <= pagesCount; i++) {\n      pages.push(i);\n    }\n\n    return (\n      <div className={classes.paginator}>\n        {portionNumber > 1 && (\n          <button\n            onClick={() => setPortionNumber(portionNumber - 1)}\n            className={classes.btn}\n          >\n            {\"<\"}\n          </button>\n        )}\n\n        {pages\n          .filter(\n            (page) =>\n              page >= leftPortionPageNumber && page <= rightPortionPageNumber\n          )\n          .map((page) => {\n            return (\n              <span\n                key={page}\n                onClick={() => {\n                  onPageChange(page);\n                }}\n                className={\n                  currentPage === page ? classes.selectedPage : classes.page\n                }\n              >\n                {page}\n              </span>\n            );\n          })}\n        {portionsCount > portionNumber && (\n          <button\n            onClick={() => {\n              setPortionNumber(portionNumber + 1);\n            }}\n            className={classes.btn}\n          >\n            {\">\"}\n          </button>\n        )}\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport classes from \"./User.module.css\";\nimport userAva from \"../../../assets/images/userAva.png\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserType } from \"../../../api/API\";\n\ntype UserPropsType = {\n  user: UserType;\n  followingInProgress: Array<number>;\n  follow: (userID: number) => void;\n  unfollow: (userID: number) => void;\n  isAuth: boolean;\n};\n\nexport const User = React.memo(\n  ({ user, followingInProgress, follow, unfollow, isAuth }: UserPropsType) => {\n    return (\n      <div>\n        <span>\n          <div>\n            <NavLink to={`/profile/${user.id}`}>\n              <img\n                src={user.photos.small ? user.photos.small : userAva}\n                className={classes.userPhoto}\n                alt={\"user avatar\"}\n              />\n            </NavLink>\n          </div>\n          <div>\n            {user.followed ? (\n              <button\n                style={{ cursor: \"pointer\" }}\n                disabled={\n                  !isAuth || followingInProgress.some((id) => id === user.id)\n                }\n                onClick={() => unfollow(user.id)}\n              >\n                Unfollow\n              </button>\n            ) : (\n              <button\n                style={{ cursor: \"pointer\" }}\n                disabled={\n                  !isAuth || followingInProgress.some((id) => id === user.id)\n                }\n                onClick={() => follow(user.id)}\n              >\n                Follow\n              </button>\n            )}\n          </div>\n        </span>\n        <span>\n          <span>\n            <div>{user.name}</div>\n            <div>{user.status}</div>\n          </span>\n        </span>\n      </div>\n    );\n  }\n);\n","import React from \"react\";\nimport { UserType } from \"../../api/API\";\nimport { Paginator } from \"../common/Paginator/Paginator\";\nimport { User } from \"./User/User\";\n\ntype UsersPropsType = {\n  users: Array<UserType>;\n  pageSize: number;\n  totalUsersCount: number;\n  currentPage: number;\n  followingInProgress: Array<number>;\n  onPageChange: (page: number) => void;\n  follow: (userID: number) => void;\n  unfollow: (userID: number) => void;\n  isAuth: boolean;\n};\n\nexport const Users = React.memo(\n  ({\n    totalUsersCount,\n    pageSize,\n    onPageChange,\n    currentPage,\n    users,\n    followingInProgress,\n    follow,\n    unfollow,\n    isAuth,\n  }: UsersPropsType) => {\n    return (\n      <div>\n        <Paginator\n          currentPage={currentPage}\n          onPageChange={onPageChange}\n          pageSize={pageSize}\n          totalItemsCount={totalUsersCount}\n          portionSize={10}\n        />\n        {users.map((user) => (\n          <User\n            key={user.id}\n            user={user}\n            followingInProgress={followingInProgress}\n            follow={follow}\n            unfollow={unfollow}\n            isAuth={isAuth}\n          />\n        ))}\n      </div>\n    );\n  }\n);\n","import { RootStateType } from \"../redux-store\";\nimport { UserType } from \"../../api/API\";\n\nexport const selectUsers = (state: RootStateType): Array<UserType> =>\n  state.usersPage.users;\nexport const selectPageSize = (state: RootStateType): number =>\n  state.usersPage.pageSize;\nexport const selectTotalUsersCount = (state: RootStateType): number =>\n  state.usersPage.totalUsersCount;\nexport const selectCurrentPage = (state: RootStateType): number =>\n  state.usersPage.currentPage;\nexport const selectIsFetching = (state: RootStateType): boolean =>\n  state.usersPage.isFetching;\nexport const selectFollowingInProgress = (\n  state: RootStateType\n): Array<number> => state.usersPage.followingInProgress;\n","import { connect } from \"react-redux\";\nimport { RootStateType } from \"../../redux/redux-store\";\nimport {\n  follow,\n  fetchUsers,\n  setCurrentPage,\n  unfollow,\n} from \"../../redux/users/usersReducer\";\nimport { Users } from \"./Users\";\nimport React from \"react\";\nimport { Preloader } from \"../common/Preloader/Preloader\";\nimport {\n  selectCurrentPage,\n  selectFollowingInProgress,\n  selectIsFetching,\n  selectPageSize,\n  selectTotalUsersCount,\n  selectUsers,\n} from \"../../redux/users/usersSelectors\";\nimport { selectIsAuth } from \"../../redux/auth/authSelectors\";\n// IMPORTS\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>;\ntype MapDispatchPropsType = {\n  setCurrentPage: (currentPage: number) => void;\n  follow: (userID: number) => void;\n  unfollow: (userID: number) => void;\n  fetchUsers: (currentPageNumber: number, pageSize: number) => void;\n};\ntype UsersClassContainerPropsType = MapStatePropsType & MapDispatchPropsType;\n// TYPES\n\n// UsersContainer --> UsersClassContainer --> Users\nclass UsersClassContainer extends React.PureComponent<UsersClassContainerPropsType> {\n  componentDidMount() {\n    this.props.fetchUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  onPageChange = (pageNumber: number) => {\n    this.props.setCurrentPage(pageNumber);\n    this.props.fetchUsers(pageNumber, this.props.pageSize);\n  };\n\n  render = () => {\n    return (\n      <>\n        {this.props.isFetching && <Preloader />}\n        <Users\n          users={this.props.users}\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChange={this.onPageChange}\n          followingInProgress={this.props.followingInProgress}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n          isAuth={this.props.isAuth}\n        />\n      </>\n    );\n  };\n}\n\nconst mapStateToProps = (state: RootStateType) => ({\n  users: selectUsers(state),\n  pageSize: selectPageSize(state),\n  totalUsersCount: selectTotalUsersCount(state),\n  currentPage: selectCurrentPage(state),\n  isFetching: selectIsFetching(state),\n  followingInProgress: selectFollowingInProgress(state),\n  isAuth: selectIsAuth(state),\n});\n\nconst UsersContainer = connect<\n  MapStatePropsType,\n  MapDispatchPropsType,\n  unknown,\n  RootStateType\n>(mapStateToProps, {\n  setCurrentPage,\n  follow,\n  unfollow,\n  fetchUsers,\n})(UsersClassContainer);\n\nexport default UsersContainer;\n"],"sourceRoot":""}